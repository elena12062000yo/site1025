#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Telegram –±–æ—Ç –¥–ª—è AI-–¥–∏–∑–∞–π–Ω–µ—Ä–∞ Alyx Babysitter
–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ + –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤ + –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
"""

import logging
import asyncio
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebApp
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes
import json
import os
from typing import Dict, List

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = "8307209669:AAFl5JKEBUPkJ8akr01RfXKwvLTNEoQPLqQ"
OWNER_ID = 1014948227
WEBSITE_URL = "https://www.alyxbabysitter.ru"

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏ (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ SQLite/PostgreSQL)
class Database:
    def __init__(self):
        self.users: Dict[int, dict] = {}
        self.orders: List[dict] = []
        self.subscribers: List[int] = []
    
    def add_user(self, user_id: int, user_data: dict):
        """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.users[user_id] = {
            'id': user_id,
            'first_name': user_data.get('first_name', ''),
            'username': user_data.get('username', ''),
            'joined_at': datetime.now(),
            'last_seen': datetime.now()
        }
    
    def update_last_seen(self, user_id: int):
        """–û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∏–∑–∏—Ç–∞"""
        if user_id in self.users:
            self.users[user_id]['last_seen'] = datetime.now()
    
    def add_order(self, order_data: dict):
        """–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"""
        order_data['id'] = len(self.orders) + 1
        order_data['created_at'] = datetime.now()
        order_data['status'] = 'new'
        self.orders.append(order_data)
        return order_data['id']
    
    def subscribe_user(self, user_id: int):
        """–ü–æ–¥–ø–∏—Å–∞—Ç—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        if user_id not in self.subscribers:
            self.subscribers.append(user_id)
    
    def unsubscribe_user(self, user_id: int):
        """–û—Ç–ø–∏—Å–∞—Ç—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        if user_id in self.subscribers:
            self.subscribers.remove(user_id)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = Database()

# –¢–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π
MESSAGES = {
    'start': """üé® <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä AI-–¥–∏–∑–∞–π–Ω–∞!</b>

–Ø Alyx Babysitter ‚Äî AI-–¥–∏–∑–∞–π–Ω–µ—Ä, —Å–æ–∑–¥–∞—é:
‚Ä¢ ü§ñ –¶–∏—Ñ—Ä–æ–≤—ã–µ –¥–≤–æ–π–Ω–∏–∫–∏
‚Ä¢ üì∏ AI-—Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏  
‚Ä¢ üé¨ –í–∏–¥–µ–æ-—Å–Ω–∏–ø–ø–µ—Ç—ã
‚Ä¢ üé® –û–±–ª–æ–∂–∫–∏ –∏ –¥–∏–∑–∞–π–Ω
‚Ä¢ üíº –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —Å—ä–µ–º–∫–∏

<i>–ë—ã—Å—Ç—Ä–æ, —á–∏—Å—Ç–æ –∏ —Å–∏—Å—Ç–µ–º–Ω–æ.</i>

üî• <b>–ù–∞–∂–º–∏—Ç–µ Menu –≤–Ω–∏–∑—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!</b>""",

    'portfolio': """üé® <b>–ú–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ</b>

–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º–æ–∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:

‚Ä¢ AI-–ø–æ—Ä—Ç—Ä–µ—Ç—ã –≤ —Å—Ç–∏–ª–µ Y2K/—Ç—Ä—ç–ø
‚Ä¢ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –¥–≤–æ–π–Ω–∏–∫–∏ –∞—Ä—Ç–∏—Å—Ç–æ–≤
‚Ä¢ AI-—Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏ –¥–ª—è –±—Ä–µ–Ω–¥–æ–≤
‚Ä¢ –ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–Ω—ã–µ –≤–∏–¥–µ–æ-—Å–Ω–∏–ø–ø–µ—Ç—ã
‚Ä¢ –û–±–ª–æ–∂–∫–∏ —Ä–µ–ª–∏–∑–æ–≤ –∏ –¥–∏–∑–∞–π–Ω

üåê –ü–æ–ª–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ: www.alyxbabysitter.ru""",

    'services': """üíé <b>–£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã</b>

ü§ñ <b>–¶–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫</b>
–û—Ç 15,000‚ÇΩ | 2-3 –Ω–µ–¥–µ–ª–∏
–°–æ–∑–¥–∞–Ω–∏–µ AI-–º–æ–¥–µ–ª–∏ –ø–æ –≤–∞—à–∏–º —Ñ–æ—Ç–æ

üì∏ <b>AI-—Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è</b>  
–û—Ç 5,000‚ÇΩ | 3-5 –¥–Ω–µ–π
–ü–∞–∫–µ—Ç –æ—Ç 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π

üé¨ <b>AI-—Å–Ω–∏–ø–ø–µ—Ç</b>
–û—Ç 3,000‚ÇΩ | 2-3 –¥–Ω—è
–ö–æ—Ä–æ—Ç–∫–∏–π —Ä–æ–ª–∏–∫ 9-15 —Å–µ–∫—É–Ω–¥

üé® <b>–î–∏–∑–∞–π–Ω –æ–±–ª–æ–∂–∫–∏</b>
–û—Ç 2,000‚ÇΩ | 1-2 –¥–Ω—è
–û–±–ª–æ–∂–∫–∞ –¥–ª—è —Ä–µ–ª–∏–∑–∞/–ø—Ä–æ–µ–∫—Ç–∞

üíº <b>–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—ä–µ–º–∫–∞</b>
–û—Ç 8,000‚ÇΩ | 5-7 –¥–Ω–µ–π
–†–µ–∫–ª–∞–º–Ω—ã–µ –≤–∏–∑—É–∞–ª—ã –¥–ª—è –±–∏–∑–Ω–µ—Å–∞

üìû –î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–∂–º–∏—Ç–µ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑" –Ω–∏–∂–µ""",

    'about': """‚ÑπÔ∏è <b>–û –¥–∏–∑–∞–π–Ω–µ—Ä–µ</b>

üë®‚Äçüé® <b>Alyx Babysitter</b>
AI-–¥–∏–∑–∞–π–Ω–µ—Ä –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∞—Ä—Ç–∏—Å—Ç

üéØ <b>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:</b>
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –¥–≤–æ–π–Ω–∏–∫–æ–≤
‚Ä¢ AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –û–±—É—á–µ–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π
‚Ä¢ –í–∏–∑—É–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω

üíº <b>–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:</b>
‚Ä¢ 100+ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –∞—Ä—Ç–∏—Å—Ç–∞–º–∏ –∏ –ª–µ–π–±–ª–∞–º–∏
‚Ä¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –±—Ä–µ–Ω–¥–æ–≤

üèÜ <b>–ü–æ–¥—Ö–æ–¥ –∫ —Ä–∞–±–æ—Ç–µ:</b>
–ë—ã—Å—Ç—Ä–æ, —á–∏—Å—Ç–æ –∏ —Å–∏—Å—Ç–µ–º–Ω–æ. –ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç ‚Äî —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –¥–µ—Ç–∞–ª–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–æ.

üì± Telegram: @alyx_babysitter""",

    'help': """‚ùì <b>–ü–æ–º–æ—â—å</b>

üöÄ <b>–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑:</b>
1. –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –≤ —Ä–∞–∑–¥–µ–ª–µ "–£—Å–ª—É–≥–∏"
2. –ù–∞–∂–º–∏—Ç–µ "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"
3. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±—Ä–∏—Ñ
4. –û–∂–∏–¥–∞–π—Ç–µ —Å–≤—è–∑–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞

üí¨ <b>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>
/start - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
/portfolio - –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ
/services - –£—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã  
/contact - –ö–æ–Ω—Ç–∞–∫—Ç—ã
/about - –û –¥–∏–∑–∞–π–Ω–µ—Ä–µ

üåê <b>–ü–æ–ª–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ:</b>
www.alyxbabysitter.ru

üìû <b>–ü—Ä—è–º–∞—è —Å–≤—è–∑—å:</b>
@alyx_babysitter –≤ Telegram

‚ö° –û–±—ã—á–Ω–æ –æ—Ç–≤–µ—á–∞—é –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç!""",

    'contact': """üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã</b>

üéØ <b>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ–µ–∫—Ç?</b>

üì± <b>Telegram:</b> @alyx_babysitter
üåê <b>–°–∞–π—Ç:</b> www.alyxbabysitter.ru
‚è∞ <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> 10:00 - 22:00 MSK

üí¨ <b>–°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:</b>
‚Ä¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —á–µ—Ä–µ–∑ Menu

üöÄ <b>–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–∞–±–æ—Ç–∞:</b>
1. –û–±—Å—É–∂–¥–∞–µ–º –∑–∞–¥–∞—á—É –∏ –±—é–¥–∂–µ—Ç
2. –ó–∞–∫–ª—é—á–∞–µ–º –¥–æ–≥–æ–≤–æ—Ä, 50% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞  
3. –í—ã–ø–æ–ª–Ω—è—é —Ä–∞–±–æ—Ç—É —Å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞–º–∏
4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞ –∏ –¥–æ–ø–ª–∞—Ç–∞

‚ö° <i>–û–±—ã—á–Ω–æ –æ—Ç–≤–µ—á–∞—é –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç!</i>"""
}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_keyboard():
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = [
        [
            InlineKeyboardButton("üé® –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ", callback_data="portfolio"),
            InlineKeyboardButton("üíé –£—Å–ª—É–≥–∏", callback_data="services")
        ],
        [
            InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contact"),
            InlineKeyboardButton("‚ÑπÔ∏è –û –¥–∏–∑–∞–π–Ω–µ—Ä–µ", callback_data="about")
        ],
        [
            InlineKeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç", web_app=WebApp(url=WEBSITE_URL))
        ],
        [
            InlineKeyboardButton("üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏", callback_data="subscribe")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_services_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É—Å–ª—É–≥"""
    keyboard = [
        [
            InlineKeyboardButton("ü§ñ –¶–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫", callback_data="order_twin"),
            InlineKeyboardButton("üì∏ AI-—Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è", callback_data="order_photo")
        ],
        [
            InlineKeyboardButton("üé¨ AI-—Å–Ω–∏–ø–ø–µ—Ç", callback_data="order_video"),
            InlineKeyboardButton("üé® –û–±–ª–æ–∂–∫–∞", callback_data="order_cover")
        ],
        [
            InlineKeyboardButton("üíº –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—ä–µ–º–∫–∞", callback_data="order_commercial")
        ],
        [
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_portfolio_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"""
    keyboard = [
        [
            InlineKeyboardButton("üåê –ü–æ–ª–Ω–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ", web_app=WebApp(url=WEBSITE_URL))
        ],
        [
            InlineKeyboardButton("ü§ñ –¶–∏—Ñ—Ä–æ–≤—ã–µ –¥–≤–æ–π–Ω–∏–∫–∏", callback_data="portfolio_twins"),
            InlineKeyboardButton("üì∏ AI-—Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏", callback_data="portfolio_photos")
        ],
        [
            InlineKeyboardButton("üé¨ –í–∏–¥–µ–æ-—Å–Ω–∏–ø–ø–µ—Ç—ã", callback_data="portfolio_videos"),
            InlineKeyboardButton("üé® –û–±–ª–æ–∂–∫–∏", callback_data="portfolio_covers")
        ],
        [
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    db.add_user(user.id, user.to_dict())
    
    await update.message.reply_text(
        MESSAGES['start'],
        parse_mode='HTML',
        reply_markup=get_main_keyboard()
    )

async def portfolio_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /portfolio"""
    user_id = update.effective_user.id
    db.update_last_seen(user_id)
    
    await update.message.reply_text(
        MESSAGES['portfolio'],
        parse_mode='HTML',
        reply_markup=get_portfolio_keyboard()
    )

async def services_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /services"""
    user_id = update.effective_user.id
    db.update_last_seen(user_id)
    
    await update.message.reply_text(
        MESSAGES['services'],
        parse_mode='HTML',
        reply_markup=get_services_keyboard()
    )

async def contact_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /contact"""
    user_id = update.effective_user.id
    db.update_last_seen(user_id)
    
    keyboard = [
        [InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å @alyx_babysitter", url="https://t.me/alyx_babysitter")],
        [InlineKeyboardButton("üìã –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="start_order")],
        [InlineKeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç", web_app=WebApp(url=WEBSITE_URL))],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    
    await update.message.reply_text(
        MESSAGES['contact'],
        parse_mode='HTML',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /about"""
    user_id = update.effective_user.id
    db.update_last_seen(user_id)
    
    keyboard = [
        [InlineKeyboardButton("üì± –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram", url="https://t.me/alyx_babysitter")],
        [InlineKeyboardButton("üåê –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ", web_app=WebApp(url=WEBSITE_URL))],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
    ]
    
    await update.message.reply_text(
        MESSAGES['about'],
        parse_mode='HTML',
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    user_id = update.effective_user.id
    db.update_last_seen(user_id)
    
    await update.message.reply_text(
        MESSAGES['help'],
        parse_mode='HTML',
        reply_markup=get_main_keyboard()
    )

# –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–∞–π–ª–µ...